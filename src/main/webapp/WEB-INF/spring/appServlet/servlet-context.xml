<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/websocket  
						http://www.springframework.org/schema/websocket/spring-websocket.xsd        
						http://www.springframework.org/schema/task
       					http://www.springframework.org/schema/task/spring-task.xsd">

	<task:annotation-driven executor="executor" scheduler="scheduler"/>
    <task:scheduler id="scheduler"/>
    <task:executor id="executor" />
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<context:component-scan base-package="kr.or.*" />
	<context:component-scan base-package="kr.or.picsion.*" />
	

	<mvc:interceptors>
		<mvc:interceptor>
           <mvc:mapping path="/board/*"/>
           <mvc:mapping path="/blame/*"/>
           <mvc:mapping path="/operation/*"/>
           <mvc:mapping path="/operationApply/*"/>
           <mvc:mapping path="/purchase/*"/>
           <mvc:mapping path="/upload.ps"/>
           <mvc:mapping path="/user/admin*.ps"/>
           <mvc:mapping path="/user/bookmarklist.ps"/>
           <mvc:mapping path="/user/followinglist.ps"/>
           <mvc:mapping path="/user/updatebefore.ps"/>
           <mvc:mapping path="/user/updateinfo.ps"/>
           <mvc:mapping path="/user/popular.ps"/>
           <mvc:mapping path="/message/receivemessage.ps"/>
           
           <!-- 로그인체크 인터셉터 클래스 -->
           <bean class="kr.or.picsion.utils.controller.LoginHandler"/>
        </mvc:interceptor>
	</mvc:interceptors>
	
	<!--Tiles 설정 (Bean 객체 생성 주입) -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		 <property name="definitions">
			  <list>
			   <value>/WEB-INF/Tiles.xml</value>
			  </list>
		 </property>
	</bean>
	<bean id="urlBasedViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	 	<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean> 
	
	<websocket:handlers>
		<websocket:mapping handler="message" path="/message.ps"/>
		<websocket:handshake-interceptors>
       		 <bean class="kr.or.picsion.utils.HandshakeInterceptor"/>
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	<bean id="message" class="kr.or.picsion.utils.NoticeSocketHandler" />
	
	<!-- google Class Bean설정 추가 -->
	
	<!-- 클라이언트ID와 보안비밀 세팅 -->
	<bean id="googleConnectionFactory" class="org.springframework.social.google.connect.GoogleConnectionFactory">
	  <constructor-arg value="#{config['google.clientId']}" />
	  <constructor-arg value="#{config['google.secretKey']}" />
	</bean>
	
 	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
	  <property name="scope" value="https://www.googleapis.com/auth/plus.login" />
	  <property name="redirectUri" value="http://127.0.0.1:8090/picsion/google/callback.ps" />
	</bean>
		
</beans>
